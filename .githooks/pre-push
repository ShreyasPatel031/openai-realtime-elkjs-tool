#!/bin/bash

# Pre-push hook that ensures Vercel preview tests pass before allowing git push
# This prevents pushing broken code that would fail in production

set -e

COLORS_RED='\033[0;31m'
COLORS_GREEN='\033[0;32m'
COLORS_YELLOW='\033[1;33m'
COLORS_BLUE='\033[0;34m'
COLORS_NC='\033[0m' # No Color

echo -e "${COLORS_BLUE}🔒 PRE-PUSH PROTECTION: Vercel Preview Testing${COLORS_NC}"
echo "=================================================================="

# Check if we're pushing to main/master branch
remote="$1"
url="$2"

zero=$(git hash-object --stdin </dev/null | tr '[0-9a-f]' '0')

while read local_ref local_oid remote_ref remote_oid
do
    if test "$local_oid" = "$zero"
    then
        # Handle delete
        continue
    fi
    
    if test "$remote_oid" = "$zero"
    then
        # New branch, examine all commits
        range="$local_oid"
    else
        # Update to existing branch, examine new commits
        range="$remote_oid..$local_oid"
    fi
    
    # Check if we're pushing to main branches
    if [[ "$remote_ref" == "refs/heads/main" ]] || [[ "$remote_ref" == "refs/heads/master" ]] || [[ "$remote_ref" == "refs/heads/openai-realtime-console-edit" ]]; then
        echo -e "${COLORS_YELLOW}⚠️  Pushing to protected branch: $remote_ref${COLORS_NC}"
        echo -e "${COLORS_YELLOW}🧪 Running Vercel preview deployment and testing...${COLORS_NC}"
        echo ""
        
        # Step 1: Deploy to Vercel preview
        echo -e "${COLORS_BLUE}📤 Step 1: Deploying to Vercel preview...${COLORS_NC}"
        if ! npm run deploy:preview; then
            echo -e "${COLORS_RED}❌ PUSH BLOCKED: Vercel preview deployment failed${COLORS_NC}"
            echo -e "${COLORS_RED}Fix the deployment issues before pushing.${COLORS_NC}"
            exit 1
        fi
        
        echo ""
        echo -e "${COLORS_BLUE}⏳ Waiting 30 seconds for deployment to be ready...${COLORS_NC}"
        sleep 30
        
        # Step 2: Run comprehensive tests on the preview
        echo -e "${COLORS_BLUE}🧪 Step 2: Running comprehensive tests on live preview...${COLORS_NC}"
        if ! npm run test:vercel-preview; then
            echo ""
            echo -e "${COLORS_RED}❌ PUSH BLOCKED: Vercel preview tests failed${COLORS_NC}"
            echo -e "${COLORS_RED}The following systems failed in the live preview:${COLORS_NC}"
            echo -e "${COLORS_RED}  - Check API health, static assets, end-to-end flow, or fallback mechanism${COLORS_NC}"
            echo -e "${COLORS_RED}  - Fix the issues and try pushing again${COLORS_NC}"
            echo ""
            echo -e "${COLORS_YELLOW}💡 To see detailed test results, run: npm run test:vercel-preview${COLORS_NC}"
            exit 1
        fi
        
        echo ""
        echo -e "${COLORS_GREEN}✅ SUCCESS: All Vercel preview tests passed!${COLORS_NC}"
        echo -e "${COLORS_GREEN}🚀 Push allowed - preview deployment is working correctly${COLORS_NC}"
        echo ""
        echo -e "${COLORS_BLUE}📋 Next steps after push:${COLORS_NC}"
        echo -e "${COLORS_BLUE}  1. Review the preview deployment${COLORS_NC}"
        echo -e "${COLORS_BLUE}  2. Run: npm run promote:production${COLORS_NC}"
        echo -e "${COLORS_BLUE}  3. Manually promote to production if satisfied${COLORS_NC}"
        echo ""
    fi
done

echo -e "${COLORS_GREEN}🔓 Pre-push checks completed successfully${COLORS_NC}"
echo "=================================================================="
