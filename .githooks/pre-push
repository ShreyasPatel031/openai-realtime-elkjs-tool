#!/bin/bash
# Pre-push hook to run e2e tests and icon fallback tests
# This ensures no broken code gets pushed to the repository

set -e  # Exit on any error

echo "🔒 PRE-PUSH HOOK: Running comprehensive tests before push..."
echo "================================================================"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[$(date '+%H:%M:%S')]${NC} $1"
}

print_success() {
    echo -e "${GREEN}✅ $1${NC}"
}

print_error() {
    echo -e "${RED}❌ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}⚠️  $1${NC}"
}

# Check if Vercel dev is running
check_vercel_dev() {
    print_status "Checking if Vercel dev server is running..."
    
    if curl -s http://localhost:3000/api/embed > /dev/null 2>&1; then
        print_success "Vercel dev server is already running"
        return 0
    else
        print_warning "Vercel dev server not running, starting it..."
        return 1
    fi
}

# Start Vercel dev server
start_vercel_dev() {
    print_status "Starting Vercel dev server..."
    
    # Kill any existing vercel processes
    pkill -f "vercel dev" || true
    
    # Start vercel dev in background
    nohup vercel dev > /dev/null 2>&1 &
    VERCEL_PID=$!
    
    # Wait for server to be ready
    print_status "Waiting for Vercel dev server to start..."
    for i in {1..30}; do
        if curl -s http://localhost:3000/api/embed > /dev/null 2>&1; then
            print_success "Vercel dev server started successfully"
            return 0
        fi
        sleep 2
        echo -n "."
    done
    
    print_error "Failed to start Vercel dev server"
    return 1
}

# Run icon fallback tests
run_icon_fallback_tests() {
    print_status "Running icon fallback tests..."
    
    if node scripts/test-icon-fallback.js; then
        print_success "Icon fallback tests passed"
        return 0
    else
        print_error "Icon fallback tests failed"
        return 1
    fi
}

# Run e2e tests
run_e2e_tests() {
    print_status "Running end-to-end tests..."
    
    if npm run test:e2e; then
        print_success "End-to-end tests passed"
        return 0
    else
        print_error "End-to-end tests failed"
        return 1
    fi
}

# Cleanup function
cleanup() {
    if [ ! -z "$VERCEL_PID" ]; then
        print_status "Cleaning up Vercel dev server..."
        kill $VERCEL_PID 2>/dev/null || true
        pkill -f "vercel dev" || true
    fi
}

# Set trap to cleanup on exit
trap cleanup EXIT

# Main test execution
main() {
    local tests_failed=0
    local server_was_running=false
    
    # Check if we need to start the server
    if check_vercel_dev; then
        server_was_running=true
    else
        if ! start_vercel_dev; then
            print_error "Cannot run tests without Vercel dev server"
            exit 1
        fi
    fi
    
    echo ""
    print_status "Running comprehensive test suite..."
    echo ""
    
    # Run icon fallback tests
    if ! run_icon_fallback_tests; then
        tests_failed=1
    fi
    
    echo ""
    
    # Run e2e tests
    if ! run_e2e_tests; then
        tests_failed=1
    fi
    
    echo ""
    echo "================================================================"
    
    if [ $tests_failed -eq 0 ]; then
        print_success "ALL TESTS PASSED - Push allowed"
        echo ""
        print_status "✨ Code quality verified:"
        print_status "   • Icon fallback system working"
        print_status "   • End-to-end functionality confirmed"
        print_status "   • Production-ready code"
        echo ""
        
        # Stop server if we started it
        if [ "$server_was_running" = false ] && [ ! -z "$VERCEL_PID" ]; then
            print_status "Stopping Vercel dev server..."
            kill $VERCEL_PID 2>/dev/null || true
            pkill -f "vercel dev" || true
        fi
        
        exit 0
    else
        print_error "TESTS FAILED - Push blocked"
        echo ""
        print_status "🚨 Fix the following issues before pushing:"
        print_status "   • Check icon fallback system functionality"
        print_status "   • Verify end-to-end application flow"
        print_status "   • Review recent changes for breaking issues"
        echo ""
        
        # Stop server if we started it
        if [ "$server_was_running" = false ] && [ ! -z "$VERCEL_PID" ]; then
            print_status "Stopping Vercel dev server..."
            kill $VERCEL_PID 2>/dev/null || true
            pkill -f "vercel dev" || true
        fi
        
        exit 1
    fi
}

# Run main function
main
